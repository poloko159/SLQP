#include "Header.h"

int A_m(real_t* in_x, real_t* in_u, real_t* out) {
        int i, j;
        real_t h = 0.05;
        real_t g = 9.8066;
        real_t G = 0.9908;

        real_t x1 = in_x[0];
        real_t x2 = in_x[1];
        real_t x3 = in_x[2];
        real_t x4 = in_x[3];
        real_t x5 = in_x[4];
        real_t x6 = in_x[5];
        real_t x7 = in_x[6];
        real_t x8 = in_x[7];

        real_t ux = in_u[0];
        real_t uy = in_u[1];

        real_t A[64];

        A[0] = 0.2604166667e-6 * std::pow(x4, 0.4e1) * G * G + 0.1250000000e-2 * G * x4 * x4 + 0.5208333334e-6 * G * ux * ux + 0.1302083333e-7 * std::pow(x4, 0.3e1) * ux * G * G + 0.1627604167e-9 * ux * ux * G * G * x4 * x4 + 0.4166666668e-4 * G * x4 * ux + 0.1e1;
        A[1] = 0.2083333334e-4 * G * x4 * x4 + 0.1302083333e-7 * G * ux * ux + 0.1041666667e-5 * G * x4 * ux + 0.5000000000e-1;
        A[2] = -0.4166666667e-3 * G * g * cos(x3) - 0.1302083333e-7 * x4 * ux * G * G * g * cos(x3) - 0.4166666667e-3 * G * g * cos(x3) * cos(0.2500000000e-1 * x4) * cos(0.6250000000e-3 * ux) + 0.4166666667e-3 * G * g * cos(x3) * sin(0.2500000000e-1 * x4) * sin(0.6250000000e-3 * ux) + 0.4166666667e-3 * G * g * sin(x3) * sin(0.2500000000e-1 * x4) * cos(0.6250000000e-3 * ux) + 0.4166666667e-3 * G * g * sin(x3) * cos(0.2500000000e-1 * x4) * sin(0.6250000000e-3 * ux) - 0.2604166667e-6 * x4 * x4 * G * G * g * cos(x3) - 0.1627604167e-9 * ux * ux * G * G * g * cos(x3) - 0.4166666667e-3 * G * g * cos(x3) * cos(0.2500000000e-1 * x4) + 0.4166666667e-3 * G * g * sin(x3) * sin(0.2500000000e-1 * x4);
        A[3] = 0.1041666667e-5 * std::pow(x4, 0.3e1) * G * G * x1 + 0.4166666668e-4 * G * x4 * x2 + 0.2500000000e-2 * G * x4 * x1 - 0.1302083333e-7 * ux * G * G * g * sin(x3) + 0.1041666667e-4 * G * g * sin(x3) * sin(0.2500000000e-1 * x4) * cos(0.6250000000e-3 * ux) + 0.1041666667e-4 * G * g * sin(x3) * cos(0.2500000000e-1 * x4) * sin(0.6250000000e-3 * ux) - 0.1041666667e-4 * G * g * cos(x3) * cos(0.2500000000e-1 * x4) * cos(0.6250000000e-3 * ux) + 0.1041666667e-4 * G * g * cos(x3) * sin(0.2500000000e-1 * x4) * sin(0.6250000000e-3 * ux) - 0.5208333334e-6 * x4 * G * G * g * sin(x3) + 0.3906249999e-7 * ux * G * G * x4 * x4 * x1 + 0.3255208334e-9 * x4 * ux * ux * G * G * x1 + 0.4166666668e-4 * G * ux * x1 + 0.1041666667e-5 * G * ux * x2 + 0.1041666667e-4 * G * g * sin(x3) * sin(0.2500000000e-1 * x4) - 0.1041666667e-4 * G * g * cos(x3) * cos(0.2500000000e-1 * x4);
        A[4] = 0;
        A[5] = 0;
        A[6] = 0;
        A[7] = 0;
        A[8] = 0.1627604167e-10 * std::pow(ux, 0.4e1) * G * G + 0.2083333334e-4 * std::pow(x4, 0.4e1) * G * G + 0.5000000000e-1 * G * x4 * x4 + 0.4166666667e-4 * G * ux * ux + 0.1953125000e-8 * x4 * std::pow(ux, 0.3e1) * G * G + 0.2083333333e-5 * std::pow(x4, 0.3e1) * ux * G * G + 0.9114583333e-7 * ux * ux * G * G * x4 * x4 + 0.2500000000e-2 * G * x4 * ux;
        A[9] = 0.4069010417e-12 * std::pow(ux, 0.4e1) * G * G + 0.2604166667e-6 * std::pow(x4, 0.4e1) * G * G + 0.1250000000e-2 * G * x4 * x4 + 0.1562500000e-5 * G * ux * ux + 0.3906250000e-7 * std::pow(x4, 0.3e1) * ux * G * G + 0.2115885417e-8 * ux * ux * G * G * x4 * x4 + 0.4882812500e-10 * x4 * std::pow(ux, 0.3e1) * G * G + 0.8333333334e-4 * G * x4 * ux + 0.1e1;
        A[10] = -0.8333333333e-2 * G * g * cos(x3) - 0.5208333334e-6 * x4 * ux * G * G * g * cos(x3) - 0.1666666667e-1 * G * g * cos(x3) * cos(0.2500000000e-1 * x4) * cos(0.6250000000e-3 * ux) + 0.1666666667e-1 * G * g * cos(x3) * sin(0.2500000000e-1 * x4) * sin(0.6250000000e-3 * ux) + 0.1666666667e-1 * G * g * sin(x3) * sin(0.2500000000e-1 * x4) * cos(0.6250000000e-3 * ux) + 0.1666666667e-1 * G * g * sin(x3) * cos(0.2500000000e-1 * x4) * sin(0.6250000000e-3 * ux) - 0.1041666667e-4 * x4 * x4 * G * G * g * cos(x3) * cos(0.2500000000e-1 * x4) + 0.1041666667e-4 * x4 * x4 * G * G * g * sin(x3) * sin(0.2500000000e-1 * x4) - 0.2604166667e-7 * ux * ux * G * G * g * cos(x3) * cos(0.2500000000e-1 * x4) + 0.2604166667e-7 * ux * ux * G * G * g * sin(x3) * sin(0.2500000000e-1 * x4) + 0.8333333333e-2 * G * g * sin(x3) * sin(0.5e-1 * x4) * cos(0.1250000000e-2 * ux) + 0.8333333333e-2 * G * g * sin(x3) * cos(0.5e-1 * x4) * sin(0.1250000000e-2 * ux) - 0.8333333333e-2 * G * g * cos(x3) * cos(0.5e-1 * x4) * cos(0.1250000000e-2 * ux) + 0.8333333333e-2 * G * g * cos(x3) * sin(0.5e-1 * x4) * sin(0.1250000000e-2 * ux) - 0.1041666667e-5 * x4 * ux * G * G * g * cos(x3) * cos(0.2500000000e-1 * x4) + 0.1041666667e-5 * x4 * ux * G * G * g * sin(x3) * sin(0.2500000000e-1 * x4) - 0.1041666667e-4 * x4 * x4 * G * G * g * cos(x3) - 0.6510416668e-8 * ux * ux * G * G * g * cos(x3) - 0.1666666667e-1 * G * g * cos(x3) * cos(0.2500000000e-1 * x4) + 0.1666666667e-1 * G * g * sin(x3) * sin(0.2500000000e-1 * x4);
        A[11] = -0.1041666667e-5 * ux * G * G * g * sin(x3) * cos(0.2500000000e-1 * x4) - 0.1041666667e-5 * ux * G * G * g * cos(x3) * sin(0.2500000000e-1 * x4) + 0.4166666666e-3 * G * g * cos(x3) * sin(0.5e-1 * x4) * sin(0.1250000000e-2 * ux) - 0.4166666666e-3 * G * g * cos(x3) * cos(0.5e-1 * x4) * cos(0.1250000000e-2 * ux) + 0.4166666666e-3 * G * g * sin(x3) * cos(0.5e-1 * x4) * sin(0.1250000000e-2 * ux) + 0.4166666666e-3 * G * g * sin(x3) * sin(0.5e-1 * x4) * cos(0.1250000000e-2 * ux) - 0.2083333334e-4 * x4 * G * G * g * sin(x3) * cos(0.2500000000e-1 * x4) - 0.2083333334e-4 * x4 * G * G * g * cos(x3) * sin(0.2500000000e-1 * x4) + 0.4166666668e-3 * G * g * sin(x3) * cos(0.2500000000e-1 * x4) * sin(0.6250000000e-3 * ux) + 0.4166666668e-3 * G * g * sin(x3) * sin(0.2500000000e-1 * x4) * cos(0.6250000000e-3 * ux) + 0.4166666668e-3 * G * g * cos(x3) * sin(0.2500000000e-1 * x4) * sin(0.6250000000e-3 * ux) - 0.4166666668e-3 * G * g * cos(x3) * cos(0.2500000000e-1 * x4) * cos(0.6250000000e-3 * ux) + 0.1041666667e-5 * std::pow(x4, 0.3e1) * G * G * x2 + 0.8333333336e-4 * std::pow(x4, 0.3e1) * G * G * x1 + 0.1000000000e0 * G * x4 * x1 + 0.2500000000e-2 * G * x4 * x2 + 0.4882812500e-10 * std::pow(ux, 0.3e1) * G * G * x2 + 0.1953125000e-8 * std::pow(ux, 0.3e1) * G * G * x1 + 0.8333333334e-4 * G * ux * x2 + 0.2500000000e-2 * G * ux * x1 - 0.2604166668e-6 * x4 * x4 * G * G * g * cos(x3) * cos(0.2500000000e-1 * x4) + 0.2604166668e-6 * x4 * x4 * G * G * g * sin(x3) * sin(0.2500000000e-1 * x4) - 0.6510416668e-9 * ux * ux * G * G * g * cos(x3) * cos(0.2500000000e-1 * x4) + 0.6510416668e-9 * ux * ux * G * G * g * sin(x3) * sin(0.2500000000e-1 * x4) - 0.2604166668e-7 * x4 * ux * G * G * g * cos(x3) * cos(0.2500000000e-1 * x4) + 0.2604166668e-7 * x4 * ux * G * G * g * sin(x3) * sin(0.2500000000e-1 * x4) + 0.1171875000e-6 * ux * G * G * x4 * x4 * x2 + 0.1822916667e-6 * x4 * ux * ux * G * G * x1 + 0.4231770834e-8 * x4 * ux * ux * G * G * x2 - 0.2083333334e-4 * x4 * G * G * g * sin(x3) + 0.6249999999e-5 * ux * G * G * x4 * x4 * x1 - 0.5208333334e-6 * ux * G * G * g * sin(x3) - 0.4166666668e-3 * G * g * cos(x3) * cos(0.2500000000e-1 * x4) + 0.4166666668e-3 * G * g * sin(x3) * sin(0.2500000000e-1 * x4);
        A[12] = 0;
        A[13] = 0;
        A[14] = 0;
        A[15] = 0;
        A[16] = 0;
        A[17] = 0;
        A[18] = 1;
        A[19] = 0.5000000000e-1;
        A[20] = 0;
        A[21] = 0;
        A[22] = 0;
        A[23] = 0;
        A[24] = 0;
        A[25] = 0;
        A[26] = 0;
        A[27] = 1;
        A[28] = 0;
        A[29] = 0;
        A[30] = 0;
        A[31] = 0;
        A[32] = 0;
        A[33] = 0;
        A[34] = 0;
        A[35] = 0;
        A[36] = 0.5208333334e-6 * G * uy * uy + 0.1250000000e-2 * G * x8 * x8 + 0.2604166667e-6 * std::pow(x8, 0.4e1) * G * G + 0.4166666668e-4 * G * x8 * uy + 0.1302083333e-7 * std::pow(x8, 0.3e1) * uy * G * G + 0.1627604167e-9 * uy * uy * G * G * x8 * x8 + 0.1e1;
        A[37] = 0.1302083333e-7 * G * uy * uy + 0.2083333334e-4 * G * x8 * x8 + 0.1041666667e-5 * G * x8 * uy + 0.5000000000e-1;
        A[38] = -0.4166666667e-3 * G * g * cos(x7) - 0.1302083333e-7 * x8 * uy * G * G * g * cos(x7) - 0.4166666667e-3 * G * g * cos(x7) * cos(0.2500000000e-1 * x8) * cos(0.6250000000e-3 * uy) + 0.4166666667e-3 * G * g * cos(x7) * sin(0.2500000000e-1 * x8) * sin(0.6250000000e-3 * uy) + 0.4166666667e-3 * G * g * sin(x7) * sin(0.2500000000e-1 * x8) * cos(0.6250000000e-3 * uy) + 0.4166666667e-3 * G * g * sin(x7) * cos(0.2500000000e-1 * x8) * sin(0.6250000000e-3 * uy) - 0.4166666667e-3 * G * g * cos(x7) * cos(0.2500000000e-1 * x8) + 0.4166666667e-3 * G * g * sin(x7) * sin(0.2500000000e-1 * x8) - 0.2604166667e-6 * x8 * x8 * G * G * g * cos(x7) - 0.1627604167e-9 * uy * uy * G * G * g * cos(x7);
        A[39] = 0.2500000000e-2 * G * x8 * x5 + 0.1041666667e-5 * std::pow(x8, 0.3e1) * G * G * x5 + 0.4166666668e-4 * G * x8 * x6 - 0.1302083333e-7 * uy * G * G * g * sin(x7) + 0.1041666667e-4 * G * g * sin(x7) * sin(0.2500000000e-1 * x8) * cos(0.6250000000e-3 * uy) + 0.1041666667e-4 * G * g * sin(x7) * cos(0.2500000000e-1 * x8) * sin(0.6250000000e-3 * uy) - 0.1041666667e-4 * G * g * cos(x7) * cos(0.2500000000e-1 * x8) * cos(0.6250000000e-3 * uy) + 0.1041666667e-4 * G * g * cos(x7) * sin(0.2500000000e-1 * x8) * sin(0.6250000000e-3 * uy) + 0.4166666668e-4 * G * uy * x5 + 0.1041666667e-5 * G * uy * x6 + 0.1041666667e-4 * G * g * sin(x7) * sin(0.2500000000e-1 * x8) - 0.1041666667e-4 * G * g * cos(x7) * cos(0.2500000000e-1 * x8) - 0.5208333334e-6 * x8 * G * G * g * sin(x7) + 0.3906249999e-7 * uy * G * G * x8 * x8 * x5 + 0.3255208334e-9 * x8 * uy * uy * G * G * x5;
        A[40] = 0;
        A[41] = 0;
        A[42] = 0;
        A[43] = 0;
        A[44] = 0.1627604167e-10 * std::pow(uy, 0.4e1) * G * G + 0.4166666667e-4 * G * uy * uy + 0.5000000000e-1 * G * x8 * x8 + 0.2083333334e-4 * std::pow(x8, 0.4e1) * G * G + 0.1953125000e-8 * x8 * std::pow(uy, 0.3e1) * G * G + 0.2500000000e-2 * G * x8 * uy + 0.2083333333e-5 * std::pow(x8, 0.3e1) * uy * G * G + 0.9114583333e-7 * uy * uy * G * G * x8 * x8;
        A[45] = 0.2604166667e-6 * std::pow(x8, 0.4e1) * G * G + 0.4069010417e-12 * std::pow(uy, 0.4e1) * G * G + 0.1562500000e-5 * G * uy * uy + 0.1250000000e-2 * G * x8 * x8 + 0.3906250000e-7 * std::pow(x8, 0.3e1) * uy * G * G + 0.2115885417e-8 * uy * uy * G * G * x8 * x8 + 0.4882812500e-10 * x8 * std::pow(uy, 0.3e1) * G * G + 0.8333333334e-4 * G * x8 * uy + 0.1e1;
        A[46] = -0.8333333333e-2 * G * g * cos(x7) - 0.5208333334e-6 * x8 * uy * G * G * g * cos(x7) - 0.1666666667e-1 * G * g * cos(x7) * cos(0.2500000000e-1 * x8) * cos(0.6250000000e-3 * uy) + 0.1666666667e-1 * G * g * cos(x7) * sin(0.2500000000e-1 * x8) * sin(0.6250000000e-3 * uy) + 0.1666666667e-1 * G * g * sin(x7) * sin(0.2500000000e-1 * x8) * cos(0.6250000000e-3 * uy) + 0.1666666667e-1 * G * g * sin(x7) * cos(0.2500000000e-1 * x8) * sin(0.6250000000e-3 * uy) - 0.1041666667e-4 * x8 * x8 * G * G * g * cos(x7) * cos(0.2500000000e-1 * x8) + 0.1041666667e-4 * x8 * x8 * G * G * g * sin(x7) * sin(0.2500000000e-1 * x8) - 0.2604166667e-7 * uy * uy * G * G * g * cos(x7) * cos(0.2500000000e-1 * x8) + 0.2604166667e-7 * uy * uy * G * G * g * sin(x7) * sin(0.2500000000e-1 * x8) - 0.8333333333e-2 * G * g * cos(x7) * cos(0.5e-1 * x8) * cos(0.1250000000e-2 * uy) + 0.8333333333e-2 * G * g * cos(x7) * sin(0.5e-1 * x8) * sin(0.1250000000e-2 * uy) + 0.8333333333e-2 * G * g * sin(x7) * sin(0.5e-1 * x8) * cos(0.1250000000e-2 * uy) + 0.8333333333e-2 * G * g * sin(x7) * cos(0.5e-1 * x8) * sin(0.1250000000e-2 * uy) - 0.1041666667e-5 * x8 * uy * G * G * g * cos(x7) * cos(0.2500000000e-1 * x8) + 0.1041666667e-5 * x8 * uy * G * G * g * sin(x7) * sin(0.2500000000e-1 * x8) - 0.1666666667e-1 * G * g * cos(x7) * cos(0.2500000000e-1 * x8) + 0.1666666667e-1 * G * g * sin(x7) * sin(0.2500000000e-1 * x8) - 0.1041666667e-4 * x8 * x8 * G * G * g * cos(x7) - 0.6510416668e-8 * uy * uy * G * G * g * cos(x7);
        A[47] = -0.4166666668e-3 * G * g * cos(x7) * cos(0.2500000000e-1 * x8) + 0.4166666668e-3 * G * g * sin(x7) * sin(0.2500000000e-1 * x8) + 0.4166666668e-3 * G * g * sin(x7) * sin(0.2500000000e-1 * x8) * cos(0.6250000000e-3 * uy) + 0.4166666668e-3 * G * g * cos(x7) * sin(0.2500000000e-1 * x8) * sin(0.6250000000e-3 * uy) - 0.4166666668e-3 * G * g * cos(x7) * cos(0.2500000000e-1 * x8) * cos(0.6250000000e-3 * uy) - 0.1041666667e-5 * uy * G * G * g * sin(x7) * cos(0.2500000000e-1 * x8) - 0.1041666667e-5 * uy * G * G * g * cos(x7) * sin(0.2500000000e-1 * x8) + 0.4166666666e-3 * G * g * sin(x7) * cos(0.5e-1 * x8) * sin(0.1250000000e-2 * uy) + 0.4166666666e-3 * G * g * sin(x7) * sin(0.5e-1 * x8) * cos(0.1250000000e-2 * uy) + 0.4166666666e-3 * G * g * cos(x7) * sin(0.5e-1 * x8) * sin(0.1250000000e-2 * uy) - 0.4166666666e-3 * G * g * cos(x7) * cos(0.5e-1 * x8) * cos(0.1250000000e-2 * uy) - 0.2083333334e-4 * x8 * G * G * g * sin(x7) * cos(0.2500000000e-1 * x8) - 0.2083333334e-4 * x8 * G * G * g * cos(x7) * sin(0.2500000000e-1 * x8) + 0.4166666668e-3 * G * g * sin(x7) * cos(0.2500000000e-1 * x8) * sin(0.6250000000e-3 * uy) + 0.8333333334e-4 * G * uy * x6 + 0.2500000000e-2 * G * uy * x5 + 0.1000000000e0 * G * x8 * x5 + 0.2500000000e-2 * G * x8 * x6 + 0.8333333336e-4 * std::pow(x8, 0.3e1) * G * G * x5 + 0.1953125000e-8 * std::pow(uy, 0.3e1) * G * G * x5 + 0.4882812500e-10 * std::pow(uy, 0.3e1) * G * G * x6 - 0.2604166668e-6 * x8 * x8 * G * G * g * cos(x7) * cos(0.2500000000e-1 * x8) + 0.2604166668e-6 * x8 * x8 * G * G * g * sin(x7) * sin(0.2500000000e-1 * x8) - 0.6510416668e-9 * uy * uy * G * G * g * cos(x7) * cos(0.2500000000e-1 * x8) + 0.6510416668e-9 * uy * uy * G * G * g * sin(x7) * sin(0.2500000000e-1 * x8) - 0.2604166668e-7 * x8 * uy * G * G * g * cos(x7) * cos(0.2500000000e-1 * x8) + 0.2604166668e-7 * x8 * uy * G * G * g * sin(x7) * sin(0.2500000000e-1 * x8) + 0.6249999999e-5 * uy * G * G * x8 * x8 * x5 - 0.5208333334e-6 * uy * G * G * g * sin(x7) + 0.1171875000e-6 * uy * G * G * x8 * x8 * x6 + 0.1822916667e-6 * x8 * uy * uy * G * G * x5 + 0.4231770834e-8 * x8 * uy * uy * G * G * x6 - 0.2083333334e-4 * x8 * G * G * g * sin(x7) + 0.1041666667e-5 * std::pow(x8, 0.3e1) * G * G * x6;
        A[48] = 0;
        A[49] = 0;
        A[50] = 0;
        A[51] = 0;
        A[52] = 0;
        A[53] = 0;
        A[54] = 1;
        A[55] = 0.5000000000e-1;
        A[56] = 0;
        A[57] = 0;
        A[58] = 0;
        A[59] = 0;
        A[60] = 0;
        A[61] = 0;
        A[62] = 0;
        A[63] = 1;

        for (int i = 0; i < 64; i++) out[i] = A[i];

#if PRINT_AB

        printf("\nA matrix:\n[\n");
        for (i = 0; i < 8; i++) {
                for (j = 0; j < 8; j++) printf("\t%e", A[i * 8 + j]);
                printf("\n");
        }
        printf("]\n\n");
        std::cout << A[30];
#endif
        return 0;
}

int B_m(real_t* in_x, real_t* in_u, real_t* out) {
        int i;
        real_t x1 = in_x[0];
        real_t x2 = in_x[1];
        real_t x3 = in_x[2];
        real_t x4 = in_x[3];
        real_t x5 = in_x[4];
        real_t x6 = in_x[5];
        real_t x7 = in_x[6];
        real_t x8 = in_x[7];

        real_t u1 = in_u[0];
        real_t u2 = in_u[1];
        for (i = 0; i < 16; i++) {
                out[i] = 0;
        }
        real_t G = 0.9986;
        real_t g = 9.8066;

        out[0] = 0.4092270728e-4 * x1 * x4 + 0.1027158841e-5 * x2 * x4 + 0.2135133714e-7 * x1 * std::pow(x4, 3) + 0.1722761238e-8 * x1 * x4 * x4 * u1 - 0.5508826992e-8 * x3 * u1 + 0.4783466268e-10 * x1 * x4 * u1 * u1 + 0.3454725638e-9 * x2 * std::pow(x4, 0.3e1) + 0.2705947619e-10 * x2 * x4 * x4 * u1 + 0.5979332835e-12 * x2 * x4 * u1 * u1 - 0.2665897372e-8 * x4 * x4 - 0.1230414172e-9 * x4 * u1 + 0.3920873990e-14 * x2 * std::pow(u1, 0.3e1) + 0.3136699192e-12 * x1 * std::pow(u1, 0.3e1) + 0.1027158841e-5 * x1 * u1 + 0.3118383647e-7 * x2 * u1 - 0.2528264063e-5 - 0.1516229131e-6 * x3 * x4;
        out[1] = 0;
        out[2] = 0.2440088776e-2 * x1 * x4 + 0.8184541455e-4 * x2 * x4 + 0.2035799629e-5 * x1 * std::pow(x4, 3) - 0.5981544122e-6 * x3 * u1 + 0.2994095553e-7 * x2 * std::pow(x4, 0.3e1) - 0.1273706522e-7 * x4 * u1 + 0.8353639862e-12 * x2 * std::pow(u1, 0.3e1) + 0.3737899871e-10 * x1 * std::pow(u1, 0.3e1) + 0.8184541455e-4 * x1 * u1 + 0.3081476523e-5 * x2 * u1 - 0.1495830980e-4 * x3 * x4 + 0.4008897611e-9 * x1 * std::pow(x4, 0.5e1) - 0.3931365531e-8 * x3 * std::pow(x4, 0.3e1) - 0.1005178687e-12 * x3 * std::pow(u1, 0.3e1) - 0.2006563106e-3 + 0.1498362821e-6 * x1 * x4 * x4 * u1 + 0.3454725638e-8 * x1 * x4 * u1 * u1 + 0.2679300198e-8 * x2 * x4 * x4 * u1 + 0.8367798574e-10 * x2 * x4 * u1 * u1 - 0.1105696556e-10 * x3 * x4 * u1 * u1 - 0.2214175873e-6 * x4 * x4 + 0.3849452820e-10 * x1 * std::pow(x4, 0.4e1) * u1 + 0.1127502453e-11 * x1 * std::pow(x4, 0.3e1) * u1 * u1 + 0.1025002230e-13 * x1 * x4 * x4 * std::pow(u1, 0.3e1) - 0.3775004402e-9 * x3 * x4 * x4 * u1 - 0.2166041615e-9 * u1 * u1;
        out[3] = 0;
        out[4] = 0.17491e5 / 0.14193000e8;
        out[5] = 0;
        out[6] = 0.208891e6 / 0.4257900e7;
        out[7] = 0;
        out[8] = 0;
        out[9] = 0.4092270728e-4 * x5 * x8 + 0.1027158841e-5 * x6 * x8 + 0.2135133714e-7 * x5 * std::pow(x8, 0.3e1) + 0.1722761238e-8 * x5 * x8 * x8 * u2 - 0.5508826992e-8 * x7 * u2 + 0.4783466268e-10 * x5 * x8 * u2 * u2 + 0.3454725638e-9 * x6 * std::pow(x8, 0.3e1) + 0.2705947619e-10 * x6 * x8 * x8 * u2 + 0.5979332835e-12 * x6 * x8 * u2 * u2 - 0.2665897372e-8 * x8 * x8 - 0.1230414172e-9 * x8 * u2 - 0.2528264063e-5 + 0.3136699192e-12 * x5 * std::pow(u2, 0.3e1) + 0.3920873990e-14 * x6 * std::pow(u2, 0.3e1) + 0.1027158841e-5 * x5 * u2 + 0.3118383647e-7 * x6 * u2 - 0.1516229131e-6 * x7 * x8;
        out[10] = 0;
        out[11] = 0.2440088776e-2 * x5 * x8 + 0.8184541455e-4 * x6 * x8 + 0.2035799629e-5 * x5 * std::pow(x8, 0.3e1) - 0.5981544122e-6 * x7 * u2 + 0.2994095553e-7 * x6 * std::pow(x8, 0.3e1) - 0.1273706522e-7 * x8 * u2 + 0.3737899871e-10 * x5 * std::pow(u2, 0.3e1) + 0.8353639862e-12 * x6 * std::pow(u2, 0.3e1) + 0.8184541455e-4 * x5 * u2 + 0.3081476523e-5 * x6 * u2 - 0.1495830980e-4 * x7 * x8 + 0.4008897611e-9 * x5 * std::pow(x8, 0.5e1) - 0.3931365531e-8 * x7 * std::pow(x8, 0.3e1) - 0.1005178687e-12 * x7 * std::pow(u2, 0.3e1) + 0.1498362821e-6 * x5 * x8 * x8 * u2 + 0.3454725638e-8 * x5 * x8 * u2 * u2 + 0.2679300198e-8 * x6 * x8 * x8 * u2 + 0.8367798574e-10 * x6 * x8 * u2 * u2 + 0.1127502453e-11 * x5 * std::pow(x8, 0.3e1) * u2 * u2 - 0.2006563106e-3 + 0.1025002230e-13 * x5 * x8 * x8 * std::pow(u2, 0.3e1) + 0.3849452820e-10 * x5 * std::pow(x8, 0.4e1) * u2 - 0.3775004402e-9 * x7 * x8 * x8 * u2 - 0.1105696556e-10 * x7 * x8 * u2 * u2 - 0.2166041615e-9 * u2 * u2 - 0.2214175873e-6 * x8 * x8;
        out[12] = 0;
        out[13] = 0.17491e5 / 0.14193000e8;
        out[14] = 0;
        out[15] = 0.208891e6 / 0.4257900e7;

#if PRINT_AB

        std::cout.precision(5);
        std::cout << "Bk" << std::endl;
        printf("\nB matrix:\n[\n");
        for (i = 0; i < 8; i++) {
                std::cout << out[i * 2] << " " << out[i * 2 + 1] << std::endl;
        }
        printf("]\n\n");
#endif

        return 0;
}

void A20() {
        int i, j, k;
        for (i = 0; i < 20; i++) A_m(&(pb_vars.x[i * 8]), &(pb_vars.u[i * 2]), &(pv_vars.A_20[i * 64]));
}

void B20() {
        int i, j, k;
        for (i = 0; i < 20; i++) B_m(&(pb_vars.x[i * 8]), &(pb_vars.u[i * 2]), &(pv_vars.B_20[i * 16]));
}

void c20() {
        int i, j, k;
        for (i = 0; i < 160; i++) pv_vars.c_20[i] = 0;

        for (i = 0; i < 1; i++)  // 1 times
                multi_A_x(&(pv_vars.A_20[i * 64]), &(pb_vars.x0[0]), &(pv_vars.c_20[i]));
}